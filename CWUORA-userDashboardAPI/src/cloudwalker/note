// insert content to mongo
session, err := mgo.Dial(mongodb_server)
if err != nil {
        fmt.Println("mongoserver panic")
}
defer session.Close()
session.SetMode(mgo.Monotonic, true)
// insert space 
c := session.DB(mongodb_database).C("space")
for i := 0; i < len(spaces); i++ {
 	c.Insert(spaces[i])
}
// find id from mongodb, using space id to find question id
//convert space id to mongo id
bsonObjectID := bson.ObjectIdHex(spaceid)

var spaceResult bson.M
err = c.Find(bson.M{"_id": bsonObjectID}).One(&spaceResult)
if err != nil {
	fmt.Println("findquery panic")
}

var selectQuestions []interface{}
selectQuestions = spaceResult["questions"].([]interface{})
var qsCount int = len(selectQuestions)
fmt.Println(qsCount)
// add question to frontend
var result bson.M
result = selectQuestions[0].(bson.M)

// convert interface to array
fmt.Println("result", result["_id"])

//resSpace[0].Id = spaceResult["_id"].(bson.ObjectId)
// resSpace[0].Title = spaceResult["title"].(string)

// // add content to resQuestions
// for i := 0; i < qsCount; i++ {
//  var r bson.M
//  r = selectQuestions[i].(bson.M)
//  resQuestions[i].Id = r["_id"].(bson.ObjectId)
// }

// response.SpaceAPIs = resSpace
// response.QuestionAPIs = resQuestions