/*
 * Cloud Walkers Message API
 *
 * Post/read questions, answers, and comments
 *
 * API version: 1.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package main

import (
	"fmt"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

func Ping(w http.ResponseWriter, r *http.Request) {
	ping();
	fmt.Fprintf(w, "pong!")
}

var routes = Routes{
	Route{
		"ping",
		"GET",
		"/msgstore/v1/ping",
		Ping,
	},


	Route{
		"QuestionsGet",
		strings.ToUpper("Get"),
		"/msgstore/v1/questions",
		QuestionsGet,
	},

	{
		"PostQuestion",
		strings.ToUpper("Post"),
		"/msgstore/v1/questions",
		PostQuestion,
	},


	Route{
		"SpacesGet",
		strings.ToUpper("Get"),
		"/msgstore/v1/spaces",
		SpacesGet,
	},

	{
		"GetAnswers",
		strings.ToUpper("Get"),
		"/msgstore/v1/answers",
		GetAnswers,
	},


	{
		"PostAnswer",
		strings.ToUpper("Post"),
		"/msgstore/v1/answers",
		PostAnswer,
	},

	{
		"GetComments",
		strings.ToUpper("Get"),
		"/msgstore/v1/comments",
		GetComments,
	},

	{
		"PostComment",
		strings.ToUpper("Post"),
		"/msgstore/v1/comments",
		PostComment,
	},

	{
		"PostReply",
		strings.ToUpper("Post"),
		"/msgstore/v1/reply",
		PostReply,
	},

}
